<?php
/**
 * @file
 * Code for the GSB Feature Webform CT feature.
 */

include_once 'gsb_feature_webform_ct.features.inc';

/**
 * Implements hook_form_FORM_ID_alter().
 */
function gsb_feature_webform_ct_form_node_form_alter(&$form, &$form_state) {
  if ($form['type']['#value'] != 'webform') {
    return;
  }
  $language = $form['language']['#value'];
  unset($form['field_hero_region_options'][$language]['#options']['_none']);

  // show/hide the image field
  $form['field_image_single_public']['#states'] = array(
    'visible' => array(
      ':input[name="field_hero_region_options[' . $language . ']"]' => array(
        array('value' => 'image'),
      ),
    ),
  );

  // show/hide the slideshow field
  $form['field_slideshow_slides']['#states'] = array(
    'visible' => array(
      ':input[name="field_hero_region_options[' . $language . ']"]' => array(
        array('value' => 'slideshow'),
      ),
    ),
  );

  // create 'required' labels Text and Image
  $text_label = '<label for="field-text-slide">Text <span class="form-required">*</span></label>';
  $image_label = '<label for="field-text-slide">Image <span class="form-required">*</span></label>';

  foreach ($form['field_slideshow_slides'][$language] as $index => $data) {
    if (is_integer($index)) {

      // remove the forms required validation flags
      $form['field_slideshow_slides'][$language][$index]['field_text_slide'][$language][0]['#required'] = false;
      $form['field_slideshow_slides'][$language][$index]['field_image_single_public'][$language][0]['#required'] = false;

      // add the required label for Text
      $form['field_slideshow_slides'][$language][$index]['field_text_slide'][$language][0]['#field_prefix'] = $text_label;
      unset($form['field_slideshow_slides'][$language][$index]['field_text_slide'][$language][0]['#title']);

      // add the required label for Text
      $form['field_slideshow_slides'][$language][$index]['field_image_single_public'][$language][0]['#field_prefix'] = $image_label;
      unset($form['field_slideshow_slides'][$language][$index]['field_image_single_public'][$language][0]['#title']);

      // change the help text for the slideshow image field
      $description = $form['field_slideshow_slides'][$language][$index]['field_image_single_public'][$language][0]['#description'];
      $description = str_replace('1140 x 640', '2800 x 800', $description);
      $form['field_slideshow_slides'][$language][$index]['field_image_single_public'][$language][0]['#description'] = $description;
    }
  }

  $form['#validate'][] = 'gsb_feature_webform_ct_form_validate';
}

function gsb_feature_webform_ct_form_validate(&$form, &$form_state) {
  $language = $form['language']['#value'];
  if ($form_state['values']['field_hero_region_options'][$language][0]['value'] == 'slideshow') {
    foreach ($form['field_slideshow_slides'][$language] as $index => $data) {
      if (is_integer($index)) {
        if (!empty($form_state['values']['field_slideshow_slides']['und'][$index]) && $form_state['values']['field_slideshow_slides']['und'][$index]['field_text_slide']['und'][0]['value'] == '') {
          $field_label = $form['field_slideshow_slides'][$language]['#title'] . ' ' . t('Text');
          $name = 'field_slideshow_slides][und][' . $index . '][field_text_slide][und][0][value';
          form_set_error($name, $field_label . ' field is required.');
        }
        if (!empty($form_state['values']['field_slideshow_slides']['und'][$index]) && $form_state['values']['field_slideshow_slides']['und'][$index]['field_image_single_public']['und'][0]['fid'] == 0) {
          $field_label = $form['field_slideshow_slides'][$language]['#title'] . ' ' . t('Image');
          $name = 'field_slideshow_slides][und][' . $index . '][field_image_single_public][und][0';
          form_set_error($name, $field_label . ' field is required.');
        }
      }
    }
  }
}


/**
 * Implements hook_library()
 */
function gsb_feature_webform_ct_library() {
  $libraries['slick'] = array(
    'title' => 'Slick',
    'website' => 'http://kenwheeler.github.io/slick',
    'version' => '1.6',
    'js' => array(
      drupal_get_path('profile', 'gsb_public') . '/libraries/slick/slick/slick.js' => array(),
    ),
    'css' => array(
      drupal_get_path('profile', 'gsb_public') . '/libraries/slick/slick/slick.css' => array(),
    ),
  );
  return $libraries;
}

/**
 * Implements hook_page_alter().
 */
function gsb_feature_webform_ct_page_alter(&$page) {
  if ($page['#type'] == 'webform') {
    drupal_add_library('gsb_feature_webform_ct', 'slick');
    drupal_add_js(drupal_get_path('module', 'gsb_feature_webform_ct') . '/js/gsb_feature_webform_ct_slideshow_slick.js');
  }
}

/**
 * Implements hook_js_alter().
 */
function gsb_feature_webform_ct_js_alter(&$javascript) {
  // Force webform.js to come after jquery.customSelect.min.js
  if (!empty($javascript['profiles/gsb_public/modules/contrib/webform/js/webform.js']) && !empty($javascript['profiles/gsb_public/themes/gsb_theme/js/libs/jquery.customSelect.min.js'])) {
    $javascript['profiles/gsb_public/modules/contrib/webform/js/webform.js']['weight'] = $javascript['profiles/gsb_public/themes/gsb_theme/js/libs/jquery.customSelect.min.js']['weight'] + 1;
    $javascript['profiles/gsb_public/modules/contrib/webform/js/webform.js']['group'] = $javascript['profiles/gsb_public/themes/gsb_theme/js/libs/jquery.customSelect.min.js']['group'];
  }
}
